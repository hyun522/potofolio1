<!-- header -->
<%- include("header.ejs",{cssFiles:["sub2.css"]})%>
<div id="container">
        <div class="c1">
            <div class="c1_left">
                <div class="c1_left_box_top">
                    <div class="c1_left_topBox">
                        <h1>애프터블로우 매장 찾기</h1>
                    </div>
                    <!-- 검색을 위한 form태그 -->
                    <form id="searchForm"  class="c1_left_centBox" action="/search" method="get">
                                                                                            <!-- 검색기능은 get 방식 속도가 빨라서 -->
                        <!-- <div class="c1_left_centBox"> -->
                            <button id="searchBtn" type="submit"><i class="fa-solid fa-magnifying-glass"></i></button>
                            <input id="searchText" name="searchText" class="search" type="text" placeholder="매장명 검색" value="<%- text %>" >
                        <!-- </div> -->
                    </form>
                    <div class="c1_left_botBox">
                        <p>총 매장: 4개</p>
                        <!-- <button>필터</button> -->
                    </div>
                </div>
                   <!-- 데이터베이스에 있는 데이터값 만큼 목록을 생성-->
                <div class="c1_left_box_bot">
                    <div class="c1_right_conts">
                        <% if(data.length > 0) { %>
                            <% for(let i=0; i<data.length; i++) { %>
                                <div class="c1_right_cont">
                                    <h3><%- data[i].title %></h3>
                                    <p><%- data[i].address %>"</p>
                                    <span><%- data[i].time %></span>
                                </div>
                            <% } %>
                        <% } else { %>
                            <div class="c1_nothing">검색결과가 없습니다.</div>
                        <% }%>
                    </div>
                    <div class="c1_right_contAll">
                        <a href="/sub2">모든 매장 보기</a>
                    </div>
                </div>
            </div>
            <div class="c1_right">
                <div id="map" style=" height:100%; width:100%"></div>
                <div class="map_wrap">
                    <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div> 
                    <!-- 지도타입 컨트롤 div 입니다 -->
                    <div class="custom_typecontrol radius_border">
                        <span id="btnRoadmap" class="selected_btn" onclick="setMapType('roadmap')">지도</span>
                        <span id="btnSkyview" class="btn" onclick="setMapType('skyview')">스카이뷰</span>
                    </div>
                    <!-- 지도 확대, 축소 컨트롤 div 입니다 -->
                    <div class="custom_zoomcontrol radius_border"> 
                        <span onclick="zoomIn()"><img src="https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/ico_plus.png" alt="확대"></span>  
                        <span onclick="zoomOut()"><img src="https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/ico_minus.png" alt="축소"></span>
                    </div>
                </div>
            </div>
     
        </div>
    </div>
    <script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=89c535a2ce61d092914f985a00b802ca"></script>
    <script>

        // +
        //index.js에서 보내준 데이터를 javascipt 구간에서 어떻게 사용할 것인가?
        const testData = <%- JSON.stringify(data) %>;
        console.log(testData);

        var container = document.getElementById('map'); //지도를 담을 영역의 DOM 레퍼런스
        var options = { //지도를 생성할 때 필요한 기본 옵션
            
            // +
            center: new kakao.maps.LatLng(testData[0].lat,testData[0].lng), //지도의 중심좌표.
            level: 7 //지도의 레벨(확대, 축소 정도)
        };
        
        var map = new kakao.maps.Map(container, options); //지도 생성 및 객체 리턴   

      
    // +
    // 마커를 표시할 위치와 내용을 가지고 있는 객체 배열입니다 
        var positions = [];
        // 배열하나 만들기

        for(let i=0; i<testData.length;i++){
            positions[i] = {
             content: `<div>${testData[i].title}</div>`, 
                            // 객체가 하나이더라도 배열로가져와야 한다.
             latlng: new kakao.maps.LatLng(testData[i].lat,testData[i].lng) 
            }
        }


    // var positions = [
    //     {
    //         content: '<div>에프터블로우 삼청점</div>', 
    //         latlng: new kakao.maps.LatLng(37.578165, 126.973001)
    //     },
    //     {
    //         content: '<div>에프터블로우 삼청2호점</div>', 
    //         latlng: new kakao.maps.LatLng(37.577553, 126.984957)
    //     },
    //     {
    //         content: '<div>에프터블로우 한남동</div>', 
    //         latlng: new kakao.maps.LatLng(37.5375279, 127.0051334)
    //     },
    //     {
    //         content: '<div>에프터블로우 한남2호점</div>',
    //         latlng: new kakao.maps.LatLng(37.5532916, 126.9845912)
    //     }
    // ];

    for (var i = 0; i < positions.length; i ++) {
        // 마커를 생성합니다
        var marker = new kakao.maps.Marker({
            map: map, // 마커를 표시할 지도
            position: positions[i].latlng // 마커의 위치
        });

        // 마커에 표시할 인포윈도우를 생성합니다 
        var infowindow = new kakao.maps.InfoWindow({
            content: positions[i].content // 인포윈도우에 표시할 내용
        });

        // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다
        // 이벤트 리스너로는 클로저를 만들어 등록합니다 
        // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다
        kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
        kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));
    }

    // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 
    function makeOverListener(map, marker, infowindow) {
        return function() {
            infowindow.open(map, marker);
        };
    }

    // 인포윈도우를 닫는 클로저를 만드는 함수입니다 
    function makeOutListener(infowindow) {
        return function() {
            infowindow.close();
        };
    }

    // 검색어 입력했으면 넘어가고 아니면 경고창 띄우기!
    const searchForm = document.querySelector("#searchForm")
    const inputText = document.querySelector("#searchText")
    const searchBtn = document.querySelector("#searchBtn")

    searchBtn.addEventListener("click",(event)=>{
        event.preventDefault();
        // 검색어 입력한 값을 가져오겠다
        let data = inputText.value; 

        let result = data.trim();
        // 띄워쓰기가 있는건 앞뒤로 제거해줘
      

        //입력값이 없으면 넘어가지마 
        if(result === ""){
            alert("검색어 입력하세요")
            event.preventDefault(); 
        }
        //입력값이 있으면 넘어가 /search 
        else{
            searchForm.submit();
        }
    })


    </script>
    
    <!-- footer -->
    <%- include("footer.ejs",{jsFiles:["sub2.js","header.js"]}) %>
</body>

</html>